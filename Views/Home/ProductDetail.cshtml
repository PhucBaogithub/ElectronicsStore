@{
    ViewData["Title"] = "Chi tiết sản phẩm";
    int productId = ViewBag.ProductId ?? 0;
}

<div class="page-content">
<div class="container py-4">
        <div class="row">
            <div class="col-12">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Products", "Home")">Sản phẩm</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Chi tiết sản phẩm</li>
                    </ol>
                </nav>
            </div>
        </div>

        <div id="productDetail" class="row">
            <div class="col-12 text-center">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Đang tải...</span>
                </div>
                <p>Đang tải thông tin sản phẩm...</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const productId = @productId;

        document.addEventListener('DOMContentLoaded', function() {
            loadProductDetail();
        });

        async function loadProductDetail() {
            if (!productId) {
                showError('Không tìm thấy sản phẩm');
                return;
            }

            try {
                const response = await fetch(`/api/products/${productId}`);
                if (response.ok) {
                    const product = await response.json();
                    displayProduct(product);
                } else {
                    showError('Không tìm thấy sản phẩm');
                }
            } catch (error) {
                console.error('Error loading product:', error);
                showError('Có lỗi xảy ra khi tải sản phẩm');
            }
        }

        function displayProduct(product) {
            const container = document.getElementById('productDetail');
            
            const discountBadge = product.hasDiscount ? 
                `<span class="badge bg-danger position-absolute top-0 end-0 m-2">
                    -${Math.round(((product.price - product.finalPrice) / product.price) * 100)}%
                </span>` : '';

            const stockStatus = product.isInStock ? 
                '<span class="badge bg-success">Còn hàng</span>' : 
                '<span class="badge bg-danger">Hết hàng</span>';

            const priceDisplay = product.hasDiscount ? 
                `<div class="mb-3">
                    <span class="h4 text-success me-2">${product.finalPrice.toLocaleString()} VNĐ</span>
                    <span class="text-muted text-decoration-line-through">${product.price.toLocaleString()} VNĐ</span>
                </div>` :
                `<div class="mb-3">
                    <span class="h4 text-success">${product.price.toLocaleString()} VNĐ</span>
                </div>`;

            container.innerHTML = `
                <div class="col-md-6">
                    <div class="position-relative">
                        <img src="${product.imageUrl || 'https://via.placeholder.com/500x500/007bff/ffffff?text=' + encodeURIComponent(product.name)}" 
                             class="img-fluid rounded shadow" alt="${product.name}">
                        ${discountBadge}
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="ps-md-4">
                        <h1 class="h2 mb-3">${product.name}</h1>
                        
                        <div class="mb-3">
                            <span class="badge bg-primary me-2">${product.categoryName}</span>
                            ${stockStatus}
                        </div>

                        ${priceDisplay}

                        <div class="mb-4">
                            <h5>Mô tả sản phẩm</h5>
                            <p class="text-muted">${product.description || 'Chưa có mô tả chi tiết'}</p>
                        </div>

                        <div class="row mb-4">
                            <div class="col-6">
                                <strong>Thương hiệu:</strong> ${product.brand || 'N/A'}
                            </div>
                            <div class="col-6">
                                <strong>Model:</strong> ${product.model || 'N/A'}
                            </div>
                            <div class="col-6 mt-2">
                                <strong>Tồn kho:</strong> ${product.stockQuantity} sản phẩm
                            </div>
                        </div>

                        ${product.isInStock ? `
                            <div class="row align-items-center mb-4">
                                <div class="col-md-4">
                                    <label for="quantity" class="form-label">Số lượng:</label>
                                    <div class="input-group">
                                        <button class="btn btn-outline-secondary" type="button" onclick="changeQuantity(-1)">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <input type="number" class="form-control text-center" id="quantity" value="1" min="1" max="${product.stockQuantity}">
                                        <button class="btn btn-outline-secondary" type="button" onclick="changeQuantity(1)">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <button class="btn btn-success btn-lg w-100" onclick="addToCart()">
                                        <i class="fas fa-cart-plus me-2"></i>Thêm vào giỏ hàng
                                    </button>
                                </div>
                            </div>
                        ` : `
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                Sản phẩm hiện đang hết hàng
                            </div>
                        `}

                        <div class="d-flex gap-2">
                            <a href="@Url.Action("Products", "Home")" class="btn btn-outline-primary">
                                <i class="fas fa-arrow-left me-2"></i>Quay lại danh sách
                            </a>
                            <button class="btn btn-outline-secondary" onclick="shareProduct()">
                                <i class="fas fa-share me-2"></i>Chia sẻ
                            </button>
                        </div>
                    </div>
                </div>
            `;
        }

        function changeQuantity(change) {
            const input = document.getElementById('quantity');
            if (!input) return;
            
            const currentValue = parseInt(input.value);
            const newValue = currentValue + change;
            const max = parseInt(input.getAttribute('max'));
            
            if (newValue >= 1 && newValue <= max) {
                input.value = newValue;
            }
        }

        async function addToCart() {
            const quantityInput = document.getElementById('quantity');
            if (!quantityInput) return;
            
            const quantity = parseInt(quantityInput.value);
            
            try {
                const formData = new FormData();
                formData.append('productId', productId);
                formData.append('quantity', quantity);

                const response = await fetch('/Cart/AddToCart', {
                    method: 'POST',
                    body: formData,
                    credentials: 'include'  // Include cookies for authentication
                });

                // Check if response is a redirect to login
                if (response.redirected && response.url.includes('/Account/Login')) {
                    showLoginPrompt();
                return;
            }

                if (response.ok) {
                    showSuccess('Đã thêm sản phẩm vào giỏ hàng thành công!');
                    if (window.updateCartCount) {
                        window.updateCartCount();
                    }
                    
                    // Redirect to cart page after 1.5 seconds
                    setTimeout(() => {
                        window.location.href = '/Cart';
                    }, 1500);
                } else if (response.status === 401 || response.status === 302) {
                    // Show login prompt
                    showLoginPrompt();
                } else {
                    try {
                        const errorText = await response.text();
                        showError(errorText || 'Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng');
                    } catch {
                        showError('Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng');
                    }
                }
            } catch (error) {
                console.error('Error adding to cart:', error);
                showError('Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng');
            }
        }

        function showLoginPrompt() {
            // Create and show login prompt modal
            const modal = document.createElement('div');
            modal.className = 'modal fade';
            modal.id = 'loginPromptModal';
            modal.innerHTML = `
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header bg-warning text-dark">
                            <h5 class="modal-title">
                                <i class="fas fa-sign-in-alt me-2"></i>Yêu cầu đăng nhập
                            </h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body text-center">
                            <i class="fas fa-user-lock fa-3x text-warning mb-3"></i>
                            <h5>Bạn cần đăng nhập để thêm sản phẩm vào giỏ hàng</h5>
                            <p class="text-muted">Vui lòng đăng nhập để tiếp tục mua sắm</p>
                        </div>
                        <div class="modal-footer justify-content-center">
                            <a href="/Account/Login?returnUrl=${encodeURIComponent(window.location.href)}" 
                               class="btn btn-primary">
                                <i class="fas fa-sign-in-alt me-2"></i>Đăng nhập
                            </a>
                            <a href="/Account/Register?returnUrl=${encodeURIComponent(window.location.href)}" 
                               class="btn btn-outline-primary">
                                <i class="fas fa-user-plus me-2"></i>Đăng ký
                            </a>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                <i class="fas fa-times me-2"></i>Đóng
                            </button>
                        </div>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
            
            // Show modal using Bootstrap
            const bsModal = new bootstrap.Modal(modal);
            bsModal.show();
            
            // Remove modal from DOM when hidden
            modal.addEventListener('hidden.bs.modal', () => {
                modal.remove();
            });
        }

        function shareProduct() {
            if (navigator.share) {
                navigator.share({
                    title: document.title,
                    url: window.location.href
                });
            } else {
                // Fallback: copy URL to clipboard
                navigator.clipboard.writeText(window.location.href).then(() => {
                    showSuccess('Đã sao chép liên kết sản phẩm!');
                });
            }
        }

        function showError(message) {
            // Create and show error alert
            const alert = document.createElement('div');
            alert.className = 'alert alert-danger alert-dismissible fade show position-fixed';
            alert.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alert.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.body.appendChild(alert);
            
            // Auto remove after 5 seconds
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.remove();
                }
            }, 5000);
        }

        function showSuccess(message) {
            // Create and show success alert
            const alert = document.createElement('div');
            alert.className = 'alert alert-success alert-dismissible fade show position-fixed';
            alert.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alert.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.body.appendChild(alert);
            
            // Auto remove after 3 seconds
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.remove();
                }
            }, 3000);
        }
    </script>
} 